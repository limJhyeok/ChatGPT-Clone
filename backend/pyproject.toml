[tool.poetry]
name = "app"
version = "0.1.0"
description = ""
authors = ["None"]


[tool.poetry.dependencies]
python = "^3.10"
fastapi = "^0.111.1"
sqlalchemy = "^2.0.31"
alembic = "^1.13.2"
passlib = {version = "^1.7.4", extras = ["bcrypt"]}
python-multipart = "^0.0.9"
python-jose = {version = "^3.3.0", extras = ["cryptography"]}
langchain = "^0.2.14"
langchain-community = "^0.2.12"
transformers = "^4.44.1"
pytz = "^2024.1"
langsmith = "^0.1.99"
langchain-chroma = "^0.1.3"
pypdf = "^4.3.1"
sentence-transformers = "^3.0.1"
pydantic-settings = "^2.5.2"
psycopg = {version = "^3.2.2", extras = ["binary", "pool"]}
ruff = "^0.6.8"


[tool.poetry.group.dev.dependencies]
pre-commit = "^4.0.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py310"
exclude = ["migrations"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "B904",  # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true
